// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreaccounts

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type MapAgentIDToImmutableBytes struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToImmutableBytes) GetBytes(key wasmtypes.ScAgentID) wasmtypes.ScImmutableBytes {
	return wasmtypes.NewScImmutableBytes(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type ImmutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

// bytes are always empty
//  balance:
//    params:
//      agentID=a: AgentID
//    results:
//      balances=this: map[Color]Int64
func (s ImmutableAccountsResults) Agents() MapAgentIDToImmutableBytes {
	//nolint:gosimple
	return MapAgentIDToImmutableBytes{proxy: s.proxy}
}

type MapAgentIDToMutableBytes struct {
	proxy wasmtypes.Proxy
}

func (m MapAgentIDToMutableBytes) Clear() {
	m.proxy.ClearMap()
}

func (m MapAgentIDToMutableBytes) GetBytes(key wasmtypes.ScAgentID) wasmtypes.ScMutableBytes {
	return wasmtypes.NewScMutableBytes(m.proxy.Key(wasmtypes.AgentIDToBytes(key)))
}

type MutableAccountsResults struct {
	proxy wasmtypes.Proxy
}

// bytes are always empty
//  balance:
//    params:
//      agentID=a: AgentID
//    results:
//      balances=this: map[Color]Int64
func (s MutableAccountsResults) Agents() MapAgentIDToMutableBytes {
	//nolint:gosimple
	return MapAgentIDToMutableBytes{proxy: s.proxy}
}

type ImmutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

// TODO should be Uint64
//  totalAssets:
//    results:
//      balances=this: map[Color]Int64
func (s ImmutableGetAccountNonceResults) AccountNonce() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(ResultAccountNonce))
}

type MutableGetAccountNonceResults struct {
	proxy wasmtypes.Proxy
}

// TODO should be Uint64
//  totalAssets:
//    results:
//      balances=this: map[Color]Int64
func (s MutableGetAccountNonceResults) AccountNonce() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(ResultAccountNonce))
}
