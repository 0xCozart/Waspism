// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use wasmlib::host::*;

use crate::*;
use crate::keys::*;
use crate::structs::*;

#[derive(Clone, Copy)]
pub struct ImmutablePlaceBetParams {
    pub(crate) id: i32,
}

impl ImmutablePlaceBetParams {
    pub fn number(&self) -> ScImmutableUint16 {
		ScImmutableUint16::new(self.id, PARAM_NUMBER.get_key_id())
	}
}

#[derive(Clone, Copy)]
pub struct MutablePlaceBetParams {
    pub(crate) id: i32,
}

impl MutablePlaceBetParams {
    pub fn number(&self) -> ScMutableUint16 {
		ScMutableUint16::new(self.id, PARAM_NUMBER.get_key_id())
	}
}

#[derive(Clone, Copy)]
pub struct ImmutablePlayPeriodParams {
    pub(crate) id: i32,
}

impl ImmutablePlayPeriodParams {
    pub fn play_period(&self) -> ScImmutableUint32 {
		ScImmutableUint32::new(self.id, PARAM_PLAY_PERIOD.get_key_id())
	}
}

#[derive(Clone, Copy)]
pub struct MutablePlayPeriodParams {
    pub(crate) id: i32,
}

impl MutablePlayPeriodParams {
    pub fn play_period(&self) -> ScMutableUint32 {
		ScMutableUint32::new(self.id, PARAM_PLAY_PERIOD.get_key_id())
	}
}
