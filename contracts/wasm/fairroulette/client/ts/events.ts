// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as client from "wasmlib/client"
import * as app from "./fairroulette"

export const eventHandlers: client.EventHandlers = {
	"fairroulette.bet": onFairRouletteBetThunk,
	"fairroulette.payout": onFairRoulettePayoutThunk,
	"fairroulette.round": onFairRouletteRoundThunk,
	"fairroulette.start": onFairRouletteStartThunk,
	"fairroulette.stop": onFairRouletteStopThunk,
	"fairroulette.winner": onFairRouletteWinnerThunk,
};

export class EventBet extends client.Event {
  	public address: client.Address;
  	public amount: client.Int64;
  	public number: client.Int64;
}

function onFairRouletteBetThunk(message: string[]) {
	let e = new EventBet(message);
	e.address = e.nextAddress();
	e.amount = e.nextInt64();
	e.number = e.nextInt64();
	app.onFairRouletteBet(e);
}

export class EventPayout extends client.Event {
  	public address: client.Address;
  	public amount: client.Int64;
}

function onFairRoulettePayoutThunk(message: string[]) {
	let e = new EventPayout(message);
	e.address = e.nextAddress();
	e.amount = e.nextInt64();
	app.onFairRoulettePayout(e);
}

export class EventRound extends client.Event {
  	public number: client.Int64;
}

function onFairRouletteRoundThunk(message: string[]) {
	let e = new EventRound(message);
	e.number = e.nextInt64();
	app.onFairRouletteRound(e);
}

export class EventStart extends client.Event {
}

function onFairRouletteStartThunk(message: string[]) {
	let e = new EventStart(message);
	app.onFairRouletteStart(e);
}

export class EventStop extends client.Event {
}

function onFairRouletteStopThunk(message: string[]) {
	let e = new EventStop(message);
	app.onFairRouletteStop(e);
}

export class EventWinner extends client.Event {
  	public number: client.Int64;
}

function onFairRouletteWinnerThunk(message: string[]) {
	let e = new EventWinner(message);
	e.number = e.nextInt64();
	app.onFairRouletteWinner(e);
}
