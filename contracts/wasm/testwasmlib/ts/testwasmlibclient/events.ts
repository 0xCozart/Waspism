// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmclient from "wasmclient"

type TestWasmLibHandlers = Map<string, (evt: TestWasmLibEvents, msg: string[]) => void>;

export class TestWasmLibEvents implements wasmclient.IEventHandler {
	private eventHandlers: TestWasmLibHandlers = new Map([
		["testwasmlib.test", (evt: TestWasmLibEvents, msg: string[]) => evt.onTestWasmLibTest(new EventTest(msg))],
	]);

	public callHandler(topic: string, params: string[]): void {
		const handler = this.eventHandlers.get(topic);
		if (handler !== undefined) {
			handler(this, params);
		}
	}

	public onTestWasmLibTest(event: EventTest): void {
	}
}

export class EventTest extends wasmclient.Event {
	public readonly address: wasmclient.Address;
	public readonly name: wasmclient.String;
	
	public constructor(msg: string[]) {
		super(msg)
		this.address = this.nextAddress();
		this.name = this.nextString();
	}
}
