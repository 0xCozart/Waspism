// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmtypes from "wasmlib/wasmtypes";
import * as sc from "./index";

export class MapTokenIDToImmutableAuction extends wasmtypes.ScProxy {

	getAuction(key: wasmtypes.ScTokenID): sc.ImmutableAuction {
		return new sc.ImmutableAuction(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class MapTokenIDToImmutableBidderList extends wasmtypes.ScProxy {

	getBidderList(key: wasmtypes.ScTokenID): sc.ImmutableBidderList {
		return new sc.ImmutableBidderList(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class MapTokenIDToImmutableBids extends wasmtypes.ScProxy {

	getBids(key: wasmtypes.ScTokenID): sc.ImmutableBids {
		return new sc.ImmutableBids(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class ImmutableFairAuctionState extends wasmtypes.ScProxy {
	auctions(): sc.MapTokenIDToImmutableAuction {
		return new sc.MapTokenIDToImmutableAuction(this.proxy.root(sc.StateAuctions));
	}

	bidderList(): sc.MapTokenIDToImmutableBidderList {
		return new sc.MapTokenIDToImmutableBidderList(this.proxy.root(sc.StateBidderList));
	}

	bids(): sc.MapTokenIDToImmutableBids {
		return new sc.MapTokenIDToImmutableBids(this.proxy.root(sc.StateBids));
	}

	ownerMargin(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.StateOwnerMargin));
	}
}

export class MapTokenIDToMutableAuction extends wasmtypes.ScProxy {

	clear(): void {
		this.proxy.clearMap();
	}

	getAuction(key: wasmtypes.ScTokenID): sc.MutableAuction {
		return new sc.MutableAuction(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class MapTokenIDToMutableBidderList extends wasmtypes.ScProxy {

	clear(): void {
		this.proxy.clearMap();
	}

	getBidderList(key: wasmtypes.ScTokenID): sc.MutableBidderList {
		return new sc.MutableBidderList(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class MapTokenIDToMutableBids extends wasmtypes.ScProxy {

	clear(): void {
		this.proxy.clearMap();
	}

	getBids(key: wasmtypes.ScTokenID): sc.MutableBids {
		return new sc.MutableBids(this.proxy.key(wasmtypes.tokenIDToBytes(key)));
	}
}

export class MutableFairAuctionState extends wasmtypes.ScProxy {
	asImmutable(): sc.ImmutableFairAuctionState {
		return new sc.ImmutableFairAuctionState(this.proxy);
	}

	auctions(): sc.MapTokenIDToMutableAuction {
		return new sc.MapTokenIDToMutableAuction(this.proxy.root(sc.StateAuctions));
	}

	bidderList(): sc.MapTokenIDToMutableBidderList {
		return new sc.MapTokenIDToMutableBidderList(this.proxy.root(sc.StateBidderList));
	}

	bids(): sc.MapTokenIDToMutableBids {
		return new sc.MapTokenIDToMutableBids(this.proxy.root(sc.StateBids));
	}

	ownerMargin(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.StateOwnerMargin));
	}
}
