// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairauction

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type MapTokenIDToImmutableAuction struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToImmutableAuction) GetAuction(key wasmtypes.ScTokenID) ImmutableAuction {
	return ImmutableAuction{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type MapTokenIDToImmutableBidderList struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToImmutableBidderList) GetBidderList(key wasmtypes.ScTokenID) ImmutableBidderList {
	return ImmutableBidderList{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type MapTokenIDToImmutableBids struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToImmutableBids) GetBids(key wasmtypes.ScTokenID) ImmutableBids {
	return ImmutableBids{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type ImmutableFairAuctionState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFairAuctionState) Auctions() MapTokenIDToImmutableAuction {
	return MapTokenIDToImmutableAuction{proxy: s.proxy.Root(StateAuctions)}
}

func (s ImmutableFairAuctionState) BidderList() MapTokenIDToImmutableBidderList {
	return MapTokenIDToImmutableBidderList{proxy: s.proxy.Root(StateBidderList)}
}

func (s ImmutableFairAuctionState) Bids() MapTokenIDToImmutableBids {
	return MapTokenIDToImmutableBids{proxy: s.proxy.Root(StateBids)}
}

func (s ImmutableFairAuctionState) OwnerMargin() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(StateOwnerMargin))
}

type MapTokenIDToMutableAuction struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToMutableAuction) Clear() {
	m.proxy.ClearMap()
}

func (m MapTokenIDToMutableAuction) GetAuction(key wasmtypes.ScTokenID) MutableAuction {
	return MutableAuction{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type MapTokenIDToMutableBidderList struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToMutableBidderList) Clear() {
	m.proxy.ClearMap()
}

func (m MapTokenIDToMutableBidderList) GetBidderList(key wasmtypes.ScTokenID) MutableBidderList {
	return MutableBidderList{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type MapTokenIDToMutableBids struct {
	proxy wasmtypes.Proxy
}

func (m MapTokenIDToMutableBids) Clear() {
	m.proxy.ClearMap()
}

func (m MapTokenIDToMutableBids) GetBids(key wasmtypes.ScTokenID) MutableBids {
	return MutableBids{proxy: m.proxy.Key(wasmtypes.TokenIDToBytes(key))}
}

type MutableFairAuctionState struct {
	proxy wasmtypes.Proxy
}

func (s MutableFairAuctionState) AsImmutable() ImmutableFairAuctionState {
	return ImmutableFairAuctionState(s)
}

func (s MutableFairAuctionState) Auctions() MapTokenIDToMutableAuction {
	return MapTokenIDToMutableAuction{proxy: s.proxy.Root(StateAuctions)}
}

func (s MutableFairAuctionState) BidderList() MapTokenIDToMutableBidderList {
	return MapTokenIDToMutableBidderList{proxy: s.proxy.Root(StateBidderList)}
}

func (s MutableFairAuctionState) Bids() MapTokenIDToMutableBids {
	return MapTokenIDToMutableBids{proxy: s.proxy.Root(StateBids)}
}

func (s MutableFairAuctionState) OwnerMargin() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(StateOwnerMargin))
}
