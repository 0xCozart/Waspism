// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]

use wasmlib::*;
use crate::*;

pub struct StringMapOfStringArrayAppendCall {
	pub func: ScFunc,
	pub params: MutableStringMapOfStringArrayAppendParams,
	pub results: ImmutableStringMapOfStringArrayAppendResults,
}

pub struct StringMapOfStringArrayLengthCall {
	pub func: ScView,
	pub params: MutableStringMapOfStringArrayLengthParams,
	pub results: ImmutableStringMapOfStringArrayLengthResults,
}

pub struct ScFuncs {
}

impl ScFuncs {
    pub fn string_map_of_string_array_append(_ctx: &dyn ScFuncCallContext) -> StringMapOfStringArrayAppendCall {
        let mut f = StringMapOfStringArrayAppendCall {
            func: ScFunc::new(HSC_NAME, HFUNC_STRING_MAP_OF_STRING_ARRAY_APPEND),
            params: MutableStringMapOfStringArrayAppendParams { proxy: Proxy::nil() },
            results: ImmutableStringMapOfStringArrayAppendResults { proxy: Proxy::nil() },
        };
        ScFunc::link_params(&mut f.params.proxy, &f.func);
        ScFunc::link_results(&mut f.results.proxy, &f.func);
        f
    }

    pub fn string_map_of_string_array_length(_ctx: &dyn ScViewCallContext) -> StringMapOfStringArrayLengthCall {
        let mut f = StringMapOfStringArrayLengthCall {
            func: ScView::new(HSC_NAME, HVIEW_STRING_MAP_OF_STRING_ARRAY_LENGTH),
            params: MutableStringMapOfStringArrayLengthParams { proxy: Proxy::nil() },
            results: ImmutableStringMapOfStringArrayLengthResults { proxy: Proxy::nil() },
        };
        ScView::link_params(&mut f.params.proxy, &f.func);
        ScView::link_results(&mut f.results.proxy, &f.func);
        f
    }
}
