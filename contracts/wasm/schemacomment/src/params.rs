// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use crate::*;

#[derive(Clone)]
pub struct ImmutableStringMapOfStringArrayAppendParams {
	pub(crate) proxy: Proxy,
}

impl ImmutableStringMapOfStringArrayAppendParams {
    pub fn name(&self) -> ScImmutableString {
		ScImmutableString::new(self.proxy.root(PARAM_NAME))
	}

    pub fn value(&self) -> ScImmutableString {
		ScImmutableString::new(self.proxy.root(PARAM_VALUE))
	}
}

#[derive(Clone)]
pub struct MutableStringMapOfStringArrayAppendParams {
	pub(crate) proxy: Proxy,
}

impl MutableStringMapOfStringArrayAppendParams {
    pub fn name(&self) -> ScMutableString {
		ScMutableString::new(self.proxy.root(PARAM_NAME))
	}

    pub fn value(&self) -> ScMutableString {
		ScMutableString::new(self.proxy.root(PARAM_VALUE))
	}
}

#[derive(Clone)]
pub struct ImmutableStringMapOfStringArrayLengthParams {
	pub(crate) proxy: Proxy,
}

impl ImmutableStringMapOfStringArrayLengthParams {
    pub fn name(&self) -> ScImmutableString {
		ScImmutableString::new(self.proxy.root(PARAM_NAME))
	}
}

#[derive(Clone)]
pub struct MutableStringMapOfStringArrayLengthParams {
	pub(crate) proxy: Proxy,
}

impl MutableStringMapOfStringArrayLengthParams {
    pub fn name(&self) -> ScMutableString {
		ScMutableString::new(self.proxy.root(PARAM_NAME))
	}
}
