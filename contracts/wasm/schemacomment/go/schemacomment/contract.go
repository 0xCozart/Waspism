// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package schemacomment

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"

type StringMapOfStringArrayAppendCall struct {
	Func    *wasmlib.ScFunc
	Params  MutableStringMapOfStringArrayAppendParams
	Results ImmutableStringMapOfStringArrayAppendResults
}

type StringMapOfStringArrayLengthCall struct {
	Func    *wasmlib.ScView
	Params  MutableStringMapOfStringArrayLengthParams
	Results ImmutableStringMapOfStringArrayLengthResults
}

type Funcs struct{}

var ScFuncs Funcs

func (sc Funcs) StringMapOfStringArrayAppend(ctx wasmlib.ScFuncCallContext) *StringMapOfStringArrayAppendCall {
	f := &StringMapOfStringArrayAppendCall{Func: wasmlib.NewScFunc(ctx, HScName, HFuncStringMapOfStringArrayAppend)}
	f.Params.proxy = wasmlib.NewCallParamsProxy(&f.Func.ScView)
	wasmlib.NewCallResultsProxy(&f.Func.ScView, &f.Results.proxy)
	return f
}

func (sc Funcs) StringMapOfStringArrayLength(ctx wasmlib.ScViewCallContext) *StringMapOfStringArrayLengthCall {
	f := &StringMapOfStringArrayLengthCall{Func: wasmlib.NewScView(ctx, HScName, HViewStringMapOfStringArrayLength)}
	f.Params.proxy = wasmlib.NewCallParamsProxy(f.Func)
	wasmlib.NewCallResultsProxy(f.Func, &f.Results.proxy)
	return f
}
