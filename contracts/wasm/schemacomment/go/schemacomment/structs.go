// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package schemacomment

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type TestStruct struct {
	X int32
	Y int32
}

func NewTestStructFromBytes(buf []byte) *TestStruct {
	dec := wasmtypes.NewWasmDecoder(buf)
	data := &TestStruct{}
	data.X = wasmtypes.Int32Decode(dec)
	data.Y = wasmtypes.Int32Decode(dec)
	dec.Close()
	return data
}

func (o *TestStruct) Bytes() []byte {
	enc := wasmtypes.NewWasmEncoder()
	wasmtypes.Int32Encode(enc, o.X)
	wasmtypes.Int32Encode(enc, o.Y)
	return enc.Buf()
}

type ImmutableTestStruct struct {
	proxy wasmtypes.Proxy
}

func (o ImmutableTestStruct) Exists() bool {
	return o.proxy.Exists()
}

func (o ImmutableTestStruct) Value() *TestStruct {
	return NewTestStructFromBytes(o.proxy.Get())
}

type MutableTestStruct struct {
	proxy wasmtypes.Proxy
}

func (o MutableTestStruct) Delete() {
	o.proxy.Delete()
}

func (o MutableTestStruct) Exists() bool {
	return o.proxy.Exists()
}

func (o MutableTestStruct) SetValue(value *TestStruct) {
	o.proxy.Set(value.Bytes())
}

func (o MutableTestStruct) Value() *TestStruct {
	return NewTestStructFromBytes(o.proxy.Get())
}
