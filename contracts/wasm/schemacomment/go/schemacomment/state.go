// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package schemacomment

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableInt64) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableInt64) GetInt64(index uint32) wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(a.proxy.Index(index))
}

type ImmutableSchemaCommentState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableSchemaCommentState) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(StateOwner))
}

func (s ImmutableSchemaCommentState) TestState() ArrayOfImmutableInt64 {
	return ArrayOfImmutableInt64{proxy: s.proxy.Root(StateTestState)}
}

type ArrayOfMutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableInt64) AppendInt64() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(a.proxy.Append())
}

func (a ArrayOfMutableInt64) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableInt64) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableInt64) GetInt64(index uint32) wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(a.proxy.Index(index))
}

type MutableSchemaCommentState struct {
	proxy wasmtypes.Proxy
}

func (s MutableSchemaCommentState) AsImmutable() ImmutableSchemaCommentState {
	return ImmutableSchemaCommentState(s)
}

func (s MutableSchemaCommentState) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(StateOwner))
}

func (s MutableSchemaCommentState) TestState() ArrayOfMutableInt64 {
	return ArrayOfMutableInt64{proxy: s.proxy.Root(StateTestState)}
}
