name: Test

on:
  pull_request:
    branches: [develop]
  push:
    branches: [artifacts]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup dependencies
        run: sudo apt-get install libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: make build

      - name: Test
        run: make test-short-no-wasm
  
  contract-test:
    name: wasm contract tests
    runs-on: ubuntu-latest
    steps:
      - name: checkout to the directory
        uses: actions/checkout@v3

      - name: install golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: install tinygo
        # only work on x86_64
        run: |
          wget https://github.com/tinygo-org/tinygo/releases/download/v0.23.0/tinygo_0.23.0_amd64.deb
          sudo dpkg -i tinygo_0.23.0_amd64.deb
          export PATH=$PATH:/usr/local/bin
      
      - name: install rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
            toolchain: stable
      - name: install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: install Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install schema
        run: |
          cd contracts/wasm
          go install ../../tools/schema
          bash schema_all.sh
          npm install
      - name: run builds
        run: |
          cd contracts/wasm
          bash all_build.sh
      - name: run tests
        run: |
          cd contracts/wasm
          go test ./...
          cd ../../packages/vm/
          go test ./...
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Generate SC files
        run: |
           go install ./tools/schema
           cd contracts/wasm
           bash schema_all.sh
           cd ..
      - name: golangci-lint in SC
        run: |
           curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.47.2
           cd contracts/wasm
           ../../bin/golangci-lint run --fix --timeout 5m0s
           
      - name: Run global scope golangci-lint
        run: |
          ./bin/golangci-lint run --timeout 5m0s
